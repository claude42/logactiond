sshd:
{
	// The source file which is scanned for matching lines
	source = "authpriv";
	// List of patterns to match source file for. If one of the patterns
	// matches a line, this results in one trigger.
	//
	// In matching lines, content that matches  %SOMETHING% tokens will be
	// used to replace the corresponding token in the action strings.
	pattern = (
        	"(error: PAM: )?[aA]uthentication (failure|error) for .* from %HOST%( via \S+)?\s*$",
        	"(error: PAM: )?User not known to the underlying authentication module for .* from %HOST%\s*$",
        	"Failed \S+ for .*? from %HOST%( port \d*)?( ssh\d*)?(: (ruser .*|(\S+ ID \S+ \(serial \d+\) CA )?\S+ ([\da-f]{2}:){15}[\da-f]{2}(, client user \".*\", client host \".*\")?))?\s*$",
        	"ROOT LOGIN REFUSED.* FROM %HOST%\s*$",
        	"[iI](llegal|nvalid) user .* from %HOST%\s*$",
        	"User .+ from %HOST% not allowed because not listed in AllowUsers\s*$",
        	"User .+ from %HOST% not allowed because listed in DenyUsers\s*$",
        	"User .+ from %HOST% not allowed because not in any group\s*$",
        	"refused connect from \S+ \(%HOST%\)\s*$",
        	"(error: )?Received disconnect from %HOST%: 3: .*: Auth fail( \[preauth\])?$",
        	"User .+ from %HOST% not allowed because a group is listed in DenyGroups\s*$",
        	"User .+ from %HOST% not allowed because none of user's groups are listed in AllowGroups\s*$",
        	"(error: )?maximum authentication attempts exceeded for .* from %HOST%(?: port \d*)?(?: ssh\d*)? \[preauth\]$",
        	"pam_unix\(sshd:auth\):\s+authentication failure;\s*logname=\S*\s*uid=\d*\s*euid=\d*\s*tty=\S*\s*ruser=\S*\s*rhost=%HOST%\s.*$"
	);
	// Service name used for syslog
	service = "sshd"
	// Which systemd unit must match - in case we're using systemd
	systemd-unit = "ssh.service";
	// In addition to the tokens matched in the pattern, additional
	// properties can be specified here which will also be used during
	// substitution of the corresponding tokens in the action strings.
	//
	// Look up the definition of the desired actions to see which
	// properties it expects.
	properties:
	{
		PROTOCOL = "tcp";
		PORT="ssh";
	}
}
